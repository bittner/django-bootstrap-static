[tox]
envlist =
    lint
    format
    py

[testenv]
description = Unit tests and test coverage
deps =
    django
    pytest-django
commands =
    pytest {posargs}

[testenv:clean]
description = Remove bytecode and other debris
skip_install = true
deps = pyclean
commands = pyclean {posargs:. --debris --erase django_bootstrap_static-*/**/* django_bootstrap_static-*/ --yes}

[testenv:ensure_version_matches]
description = Verify package version is same as Git tag
deps =
commands = python -c 'import os; from importlib.metadata import version; pkg, tag = os.environ["PKG_NAME"], os.environ["GIT_TAG"]; ver = version(pkg); error = f"`{ver}` != `{tag}`"; abort = f"Package version does not match the Git tag ({error}). ABORTING."; raise SystemExit(0 if ver and tag and ver == tag else abort)'
setenv =
    PKG_NAME=django-bootstrap-static
    GIT_TAG={posargs}

[testenv:format]
description = Ensure consistent code style (Ruff)
skip_install = true
deps = ruff
commands = ruff format {posargs:--check --diff .}

[testenv:lint]
description = Lightening-fast linting (Ruff)
skip_install = true
deps = ruff
commands = ruff check {posargs:--output-format=full .}

[testenv:package]
description = Build package and check metadata (or upload package)
skip_install = true
deps =
    build
    twine
commands =
    python -m build
    twine {posargs:check --strict} dist/*
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY_URL
